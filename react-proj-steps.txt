Requirements:
1. nodejs
2. git
3. postman
4. react devtools chrome ext
5. redux devtools chrome ext

Init Setup:
1. vscode
-- es7 react, redux, react-native extension
-- settings.json emmit include languages
    "javascript": "javascriptreact"

2. mongo atlas
-- create project
-- create cluster free tier
-- add user to access db
-- whitelist ip address

3. vscode
-- create .gitignore
    node_modules/

-- git init
-- npm init
    starting point: server.js
    license       : MIT

-- install regular dependencies 
    npm i express express-validator bcryptjs config gravatar jsonwebtoken mongoose request

-- install dev dependencies
    npm i -D nodemon concurrently

--package.json replace "test" with "start"
    "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },

  rewrite as:-

  "scripts": {
    "start": "node server",
    "server": "nodemon server"
  },

Steps:
---------------------------------------------------------------------------------
                                PART ONE
---------------------------------------------------------------------------------

1-- CREATING EXPRESS SERVER AND INITIALIZING APP
                TERMINAL: npm run server
                POSTMAN: GET: http://localhost:5000
                                You should be able to see the response "API Running"

2-- CONNECTING TO MONGO DB
                TERMINAL: npm run server
                    You should be able to see "Database connected"

3-- CREATING ROUTES
4-- UPDATE server.js
        GOTO POSTMAN and check if the routes are working

5-- CREATE COLLECTIONS IN POSTMAN

6-- MODELS *Naming convention- Start with uppercase
7-- UPDATE users.js
8-- UPDATE server.js

    GOTO POSTMAN AND POST REQUEST
    -   HEADERS
            KEY             VALUE
            Content-Type    application/json

    -   BODY -> raw
        {
            "name":"sonia"
        }

9-- UPDATE users.js FOR VALIDATION
        POST in POSTMAN to see 400 bad req
        POST correct details in req and see 200 OK
        -Save as -> Register User in collection 'Users & Auth'

10-- UPDATE users.js
        POSTMAN Register User -> SEND
        GOTO COLLECTIONS in MONGO DB and check if the user 'sonia' is saved.

---------------------------------------------------------------------------------
                                PART TWO
---------------------------------------------------------------------------------