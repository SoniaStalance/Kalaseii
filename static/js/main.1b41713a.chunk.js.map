{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/auth/Register.js","components/auth/Login.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/spinner.gif","components/layout/Spinner.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Project.js","components/dashboard/DashboardActions.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddProject.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileProject.js","components/profile/Profile.js","components/layout/Alert.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","isAuthenticated","auth","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","to","className","placeholder","login","required","minLength","logout","loading","authLinks","onClick","href","guestLinks","src","spinner","style","width","margin","display","alt","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","map","exp","company","title","format","from","_id","deleteProject","project","projects","pro","url1","url2","description","location","DashboardActions","user","profile","deleteAccount","window","confirm","useEffect","Spinner","Component","component","rest","render","props","withRouter","website","phone","skills","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","current","toDateDisabled","toggleDisabled","checked","disabled","maxLength","cols","rows","addProject","proj_date","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","length","ProfileTop","rel","ProfileAbout","ProfileExperience","ProfileProject","getProfileById","userId","match","params","alerts","alert","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddProject","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b41713a.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';","import { v4 as uuidv4 } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout) => dispatch => {\n    const id = uuidv4();\n    dispatch({\n        type: SET_ALERT,\n        payload: {msg, alertType, id}\n    });\n\n    setTimeout(()=> dispatch({type: REMOVE_ALERT, payload: id}), timeout)\n}","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token)\n        axios.defaults.headers.common['x-auth-token'] = token\n    else\n        delete axios.defaults.headers.common['x-auth-token']\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n//load user\nexport const loadUser = () => async dispatch => {\n    if(localStorage.token)\n        setAuthToken(localStorage.token)\n    \n    try {\n        const res = await axios.get('/api/auth');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        })\n    }\n}\n\n//register user\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n        const res = await axios.post('/api/users', body, config);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n            //res.data is the token\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger',3000)));\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n}\n\n//Login User\n\nexport const login = ( email, password ) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post('/api/auth', body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n            //res.data is the token\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger',3000)));\n        }\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n}\n\n//logout\n//clear profile\nexport const logout = () => dispatch => {\n    dispatch({type: CLEAR_PROFILE})\n    dispatch({type: LOGOUT})\n}","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n/*connect is used by the component that wants to interact with redux say calling actions or getting state */\nimport { register } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\n//impt\nimport PropTypes from 'prop-types'\n\n//const Register = (props) =>\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    const [ formData, setFormData ] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        //can be written as props.setAlert('Passwords do not match', 'danger')\n        if(password !== password2)\n            setAlert('Passwords do not match', 'danger', 3000)\n        else\n           register({name, email, password});\n    }\n\n    if(isAuthenticated){\n        return <Redirect to ='/dashboard' />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n\n            <form className=\"form\" onSubmit={ e => onSubmit(e) }>\n                <div className=\"form-group\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Name\" \n                    name=\"name\" value={ name } \n                    onChange={ e => onChange(e) } \n                    //required \n                />\n                </div>\n\n                <div className=\"form-group\">\n                <input \n                    type=\"email\" \n                    placeholder=\"Email Address\" \n                    name=\"email\" \n                    value={ email } \n                    onChange={ e => onChange(e) } \n                    //required\n                />\n                <small className=\"form-text\"\n                    >This site uses Gravatar so if you want a profile image, use a\n                    Gravatar email</small\n                >\n                </div>\n\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={ password } \n                    onChange={ e => onChange(e) }\n                    //minLength=\"6\"\n                />\n                </div>\n\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    value={ password2 } \n                    onChange={ e => onChange(e) }\n                    //minLength=\"6\"\n                />\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n    //ptrf\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n\n/*connect(state, {actions}) i.e passing state and object of alerts\nYou can now access prop.setAlert\n*/","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [ formData, setFormData ] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password);\n    }\n\n    //redirect if logged in\n    if(isAuthenticated){\n        return <Redirect to ='/dashboard' />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign In</p>\n\n            <form className=\"form\" onSubmit={ e => onSubmit(e) }>\n                \n                <div className=\"form-group\">\n                <input \n                    type=\"email\" \n                    placeholder=\"Email Address\" \n                    name=\"email\" \n                    value={ email } \n                    onChange={ e => onChange(e) } \n                    required\n                />\n                </div>\n\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={ password } \n                    onChange={ e => onChange(e) }\n                    minLength=\"6\"\n                />\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to=\"/register\">Sign Up</Link>\n            </p>\n        </Fragment>\n    )\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n    const authLinks = (\n        <ul>\n            <li><Link to='/profiles'><i className='fas fa-home'/>{' '}\n                    <span className='hide-sm'>Home</span></Link></li>\n            <li><Link to=\"/dashboard\"><i className='fas fa-user'/>{' '}\n                    <span className='hide-sm'>Dashboard</span></Link></li>\n            <li><a onClick={ logout } href=\"/\">\n                    <i className='fas fa-sign-out-alt'/>{' '}\n                    <span className='hide-sm'>Logout</span>\n                </a>\n            </li>\n        </ul>\n    );\n\n    const guestLinks = (\n        <ul>\n            <li><Link to='/profiles'>Community</Link></li>\n            <li><Link to=\"/register\">Register</Link></li>\n            <li><Link to=\"/login\">Login</Link></li>\n        </ul>    \n    );\n\n    return (\n        <nav className=\"navbar bg-dark\">\n        <h1>\n            <Link to=\"/\"><i className=\"fas fa-palette\"></i> Kalaseii </Link>\n        </h1>\n        { !loading && (<Fragment>{ isAuthenticated ? authLinks: guestLinks }</Fragment>)}\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar);","/*\nES7 React/Redux snippets\nracfe (enter)\n*/\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport const Landing = ({ isAuthenticated }) => {\n    if(isAuthenticated){\n        return <Redirect to = '/dashboard'/>\n    }\n    return (\n        <section className=\"landing\">\n        <div className=\"dark-overlay\">\n            <div className=\"landing-inner\">\n                <h1 className=\"x-large\">Kalaseii</h1>\n                <p className=\"lead\">\n                    Find professional designers and artists specialized in modern art, decorative walls, floors and ceilings. Join now and be a part of Kalaseii - The Aesthetic Wave.\n                </p>\n                <div className=\"buttons\">\n                    <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\n                    <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\n                </div>\n            </div>\n        </div>\n        </section>\n    )\n}\nLanding.propTypes = {\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Landing);","export default __webpack_public_path__ + \"static/media/spinner.dbb22bcf.gif\";","import React, { Fragment } from 'react'\nimport spinner from './spinner.gif'\n\nexport default () => (\n    <Fragment>\n        <img src={spinner} style={{ width: '200px', margin: 'auto', display: 'block'}} alt='Loading...'/>\n    </Fragment>\n)","import axios from 'axios'\nimport { setAlert } from './alert'\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_PROFILES } from './types'\n\n//get the currrent users profile\nexport const getCurrentProfile = () => async dispatch => {\n\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n//get all profiles\nexport const getProfiles = () => async dispatch => {\n    dispatch({type: CLEAR_PROFILE});\n    try {\n        const res = await axios.get('/api/profile');\n\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n//get profile by id\nexport const getProfileById = (userId) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n//create or update profile\n//push will redirect back to client side\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success', 3000));\n        history.push('/dashboard');\n        //if(!edit){        }\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger',3000)));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n//add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience added', 'success', 3000));\n\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger',3000)));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n//add project\n\nexport const addProject = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/project', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Project added', 'success', 3000));\n\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger',3000)));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n//del exp\nexport const deleteExperience = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Experience deleted', 'success', 3000));\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n//del project\nexport const deleteProject = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/project/${id}`);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Project deleted', 'success', 3000));\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n//del acc and profile\nexport const deleteAccount = () => async dispatch => {\n    if(window.confirm('Are you sure? This cannot be undone!')){\n        try {\n            await axios.delete('/api/profile')\n            dispatch({type: CLEAR_PROFILE})\n            dispatch({type: ACCOUNT_DELETED})\n            dispatch(setAlert('Your account has been permanently deleted', 'success', 3000));\n    \n        } catch (err) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            });\n        }\n    }\n}","import PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport Moment from 'react-moment'\nimport { Fragment } from 'react'\nimport { deleteExperience } from '../../actions/profile'\n\nconst Experience = ({experience, deleteExperience}) => {\n    const experiences=experience.map(exp=>(\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className='hide-sm'>{exp.title}</td>\n            <td>\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment>-{\n                    exp.to === null ? ('Now') : (<Moment format='YYYY/MM/DD'>{exp.to}</Moment>)\n                }\n            </td>\n            <td><button onClick={()=>deleteExperience(exp._id)} className='btn btn-danger'>Delete</button></td>\n        </tr>\n    ))\n    return (\n        <Fragment>\n            <h2 className='my-2'>Experience</h2>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>Company</th>\n                        <th className='hide-sm'>Title</th>\n                        <th className='hide-sm'>Years</th>\n                    </tr>\n                </thead>\n                <tbody>{experiences}</tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteExperience })(Experience);\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport Moment from 'react-moment'\nimport { Fragment } from 'react'\nimport { deleteProject } from '../../actions/profile'\n\nconst Project = ({project, deleteProject}) => {\n    const projects=project.map(pro=>(\n        <div key={pro._id} className=\"profile bg-light\">\n            <div>\n                <img src={pro.url1} alt={pro.title}/>\n                {\n                    pro.url2 === null ? ('') : (<img src={pro.url2} alt={pro.title} />)\n                }\n            </div>\n            <div>\n                <ul>\n                    <li><h2>{pro.title}</h2></li>\n                    <li><b>Description: </b><em>{pro.description}</em></li><br/>\n                    <li><b>Date: </b><Moment format='YYYY/MM/DD'>{pro.from}</Moment></li>\n                    <li><b>Location: </b>{pro.location}</li>\n                </ul>\n            </div>\n            <div><button onClick={()=>deleteProject(pro._id)} className='btn btn-danger'>Delete</button></div>\n        </div>\n    ))\n    return (\n        <Fragment>\n            <h2 className='my-2'>Projects</h2>\n            {projects}\n        </Fragment>\n    )\n}\n\nProject.propTypes = {\n    project: PropTypes.array.isRequired,\n    deleteProject: PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteProject})(Project);\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst DashboardActions = ({user}) => {\n    return (\n        <div className=\"dash-buttons\">\n            <Link to={`/profile/${user._id}`} className='btn btn-light'><i className=\"fas fa-user-circle text-primary\"></i> View Profile</Link>\n            <Link to=\"/edit-profile\" className=\"btn btn-light\"\n            ><i className=\"fas fa-edit text-primary\"></i> Edit Profile</Link>\n\n            <Link to=\"/add-experience\" className=\"btn btn-light\"\n            ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link >\n\n            <Link to=\"/add-project\" className=\"btn btn-light\"\n            ><i className=\"fas fa-palette text-primary\"></i> Add Project</Link>\n        </div>\n    )\n}\n\nexport default DashboardActions\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\nimport Experience from './Experience'\nimport Project from './Project'\nimport DashboardActions from './DashboardActions'\n\nconst Dashboard = ({ getCurrentProfile, deleteAccount, auth: { user }, profile: { profile, loading} }) => {\n    useEffect(()=>{\n        getCurrentProfile();\n    }, [getCurrentProfile]);//will run only once\n    return loading && profile === null ? <Spinner/> : <Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n            <i className=\"fas fa-user\"></i> Welcome { user && user.name}\n        </p>\n        { profile !== null ? \n            <Fragment> \n                <DashboardActions user={profile.user}/>\n                <Experience experience={profile.experience}/> \n                <Project project={profile.project}/>\n                <div className=\"my-2\">\n                    <button onClick={()=> deleteAccount()} className=\"btn btn-danger\"><i className=\"fas fa-user-minus\"></i>Delete my Account</button>\n                </div>\n            </Fragment> \n            : \n            <Fragment>\n                <p>Share your expertise with the world!</p>\n                <Link to='/create-profile' className='btn btn-primary my-1'>Create Profile</Link>\n            </Fragment>\n        }\n    </Fragment>\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n//...rest takes anything else that is passed in\nconst PrivateRoute = ({ component: Component, auth: {isAuthenticated, loading}, ...rest }) => (\n    <Route {...rest} render={ props => !isAuthenticated && !loading ? (<Redirect to='/login'/>) : (<Component {...props} />)}/>\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","//racfp\nimport React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createProfile } from '../../actions/profile'\nimport { Link, withRouter } from 'react-router-dom'\n\nconst CreateProfile = ({ createProfile, history }) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        email: '',\n        phone:'',\n        location: '',\n        status: '',\n        skills: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\n\n    const {\n        company,\n        website,\n        email,\n        phone,\n        location,\n        status,\n        skills,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history)\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=> onSubmit(e)}>\n                <div className=\"form-group\">\n                <select name=\"status\" value={status} onChange={e=> onChange(e)}>\n                    <option value=\"0\">* Select Professional Status</option>\n                    <option value=\"Professional Artist\">Professional Artist</option>\n                    <option value=\"Self-Taught Artist\">Self-Taught Artist</option>\n                    <option value=\"Contractor\">Contractor</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Student\">Student or Learning</option>\n                    <option value=\"Intern\">Intern</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Enter a valid email id</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"number\" placeholder=\"Phone No\" name=\"phone\" value={phone} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Enter your contact no</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >City & state suggested (eg. Bengaluru, India)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                     3D flooring, false ceiling, wall designing)</small\n                >\n                </div>\n                \n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e=> onChange(e)}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button type=\"button\" onClick={()=>toggleSocialInputs(!displaySocialInputs)} className=\"btn btn-light\">\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && <Fragment>\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-twitter fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e=> onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-facebook fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e=> onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-youtube fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e=> onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e=> onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-instagram fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e=> onChange(e)}/>\n                    </div>\n                    </Fragment>}\n               \n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired\n}\n\nexport default connect(null, {createProfile})(withRouter(CreateProfile))\n","//racfp\nimport React, { Fragment, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createProfile, getCurrentProfile } from '../../actions/profile'\nimport { Link, withRouter } from 'react-router-dom'\n\nconst EditProfile = ({ profile:{profile, loading}, createProfile, getCurrentProfile, history }) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        email: '',\n        phone:'',\n        location: '',\n        status: '',\n        skills: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\n\n    useEffect(()=>{\n        getCurrentProfile();\n\n        setFormData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            email: loading || !profile.email ? '' : profile.email,\n            phone: loading || !profile.phone ? '' : profile.phone,\n            location: loading || !profile.loading ? '' : profile.loading,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\n            bio: loading || !profile.bio ? '' : profile.bio,\n            twitter: loading || !profile.social.twitter ? '' : profile.social.twitter,\n            facebook: loading || !profile.social.facebook ? '' : profile.social.facebook,\n            linkedin: loading || !profile.social.linkedin ? '' : profile.social.linkedin,\n            youtube: loading || !profile.social.youtube ? '' : profile.social.youtube,\n            instagram: loading || !profile.social.instagram ? '' : profile.social.instagram\n        })\n    },[loading, getCurrentProfile]);\n\n    const {\n        company,\n        website,\n        email,\n        phone,\n        location,\n        status,\n        skills,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true)\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Edit Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=> onSubmit(e)}>\n                <div className=\"form-group\">\n                <select name=\"status\" value={status} onChange={e=> onChange(e)}>\n                    <option value=\"0\">* Select Professional Status</option>\n                    <option value=\"Professional Artist\">Professional Artist</option>\n                    <option value=\"Self-Taught Artist\">Self-Taught Artist</option>\n                    <option value=\"Contractor\">Contractor</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Student\">Student or Learning</option>\n                    <option value=\"Intern\">Intern</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Enter a valid email id</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"number\" placeholder=\"Phone No.\" name=\"phone\" value={phone} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Enter your contact no</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >City & state suggested (eg. Bengaluru, India)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                    3D flooring, false ceiling, wall designing)</small\n                >\n                </div>\n                \n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e=> onChange(e)}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button type=\"button\" onClick={()=>toggleSocialInputs(!displaySocialInputs)} className=\"btn btn-light\">\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && <Fragment>\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-twitter fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e=> onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-facebook fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e=> onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-youtube fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e=> onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e=> onChange(e)}/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-instagram fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e=> onChange(e)}/>\n                    </div>\n                    </Fragment>}\n               \n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile))\n","import React, { Fragment, useState } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {addExperience} from '../../actions/profile'\n\nconst AddExperience = ({addExperience, history}) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from:'',\n        to:'',\n        current: false,\n        description:''\n    });\n\n    const [toDateDisabled, toggleDisabled] =useState(false);\n\n    const {company, title, location, from, to, current, description} = formData;\n\n    const onChange = e =>setFormData({...formData, [e.target.name]:e.target.value });\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n            Add An Experience\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n                positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=>{\n                e.preventDefault();\n                addExperience(formData, history)\n            }}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e=>onChange(e)} required />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e=>onChange(e)} required />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=>onChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                <h4>From Date</h4>\n                <input type=\"date\" name=\"from\" checked={current} value={from} onChange={e=>onChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                <p><input type=\"checkbox\" name=\"current\" value={current} onChange={e=>{\n                    setFormData({...formData, current: !current});\n                    toggleDisabled(!toDateDisabled);\n                }} />{' '} Current Job</p>\n                </div>\n                <div className=\"form-group\">\n                <h4>To Date</h4>\n                <input type=\"date\" name=\"to\" value={to} onChange={e=>onChange(e)} disabled={toDateDisabled ? 'disabled': ''}/>\n                </div>\n                <div className=\"form-group\">\n                <textarea\n                    name=\"description\"\n                    maxLength=\"250\"\n                    cols=\"30\"\n                    rows=\"5\"\n                    placeholder=\"Job Description (max 250 words)\"\n                    value={description} onChange={e=>onChange(e)}\n                ></textarea>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null,{addExperience})(withRouter(AddExperience))\n","import React, { Fragment, useState } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {addProject} from '../../actions/profile'\n\nconst AddProject = ({addProject, history}) => {\n    const [formData, setFormData] = useState({\n        url1: '',\n        url2: '',\n        location: '',\n        title: '',\n        proj_date:'',\n        description:''\n    });\n\n    const {url1, url2, location, title, proj_date, description} = formData;\n\n    const onChange = e =>setFormData({...formData, [e.target.name]:e.target.value });\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n            Add Project\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add photos of your projects\n            </p>\n            <small>* = required title</small>\n            <form className=\"form\" onSubmit={e=>{\n                e.preventDefault();\n                addProject(formData, history)\n            }}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"title\" name=\"title\" value={title} onChange={e=>onChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* location\" name=\"location\" value={location} onChange={e=>onChange(e)} />\n                </div>\n\n                <div className=\"form-group\">\n                <h4>Project Date</h4>\n                <input type=\"date\" name=\"proj_date\" value={proj_date} onChange={e=>onChange(e)}/>\n                </div>\n\n                <div className=\"form-group\">\n                <textarea\n                    maxLength=\"300\"\n                    name=\"description\"\n                    cols=\"30\"\n                    rows=\"5\"\n                    placeholder=\"Project Description (max 300 words)\"\n                    value={description} onChange={e=>onChange(e)}\n                ></textarea>\n                </div>\n\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* url1\" name=\"url1\" value={url1} onChange={e=>onChange(e)} />\n                </div>\n\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"  optional url2\" name=\"url2\" value={url2} onChange={e=>onChange(e)}/>\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nAddProject.propTypes = {\n    addProject: PropTypes.func.isRequired\n}\n\nexport default connect(null,{addProject})(withRouter(AddProject))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst ProfileItem = ({profile:{\n    user: {_id, name, avatar},\n    status,\n    company,\n    location,\n    skills\n}}) => {\n    return (\n        <div className=\"profile bg-light\">\n            <img src={avatar} alt={name} className=\"round-img\"/>\n            <div>\n                <h2>{name}</h2>\n                <p>{status} {company && <span> at {company}</span>}</p>\n                <p className='my-1'>{location && <span>{location}</span>}</p>\n                <Link to={`/profile/${_id}`} className='btn btn-primary'>View Profile</Link>\n            </div>\n            <ul>\n                {skills.slice(0,4).map((skill, index)=>(\n                    <li key = {index} className=\"text-primary\">\n                        <i className=\"fas fa-check\"></i> {skill}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nProfileItem.propTypes = {\n    profile: PropTypes.object.isRequired\n}\n\nexport default ProfileItem\n","import React, {Fragment, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Spinner from '../layout/Spinner'\nimport {getProfiles} from '../../actions/profile'\nimport ProfileItem from './ProfileItem'\n\nconst Profiles = ({getProfiles, profile: {profiles, loading}}) => {\n    useEffect(()=>{\n        getProfiles();\n    },[getProfiles])\n    return <Fragment>\n        {loading ? <Spinner/> : <Fragment>\n            <h1 className=\"large text-primary\">Community</h1>\n            <div className=\"profiles\">{profiles.length>0 ? (profiles.map(profile=>(\n                <ProfileItem key={profile._id} profile={profile}/>\n            ))): <></>}</div>\n            </Fragment>}\n    </Fragment>\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, {getProfiles})(Profiles)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileTop = ({ profile: {\n    status,\n    company,\n    location,\n    website,\n    email,\n    phone,\n    social,\n    user:{name, avatar}\n}}) => {\n    return (\n        <div className=\"profile-top bg-secondary p-2\">\n          <img\n            className=\"round-img my-1\"\n            src={avatar}\n            alt={name}\n          />\n          <h1 className=\"large\">{name}</h1>\n          <p className=\"lead\">{status}{company && <span> at {company}</span>}</p>\n          <p>{location && <span>{location}</span> }</p>\n          <div className=\"icons my-1\">\n              {\n                  email && (\n                    <a className='btn btn-light btn-rounded' href={`mailto:${email}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fas fa-envelope fa-2x text-dark\"></i>\n                    </a>\n                  )\n              }\n              {\n                  phone && (\n                    <a className='btn btn-light btn-rounded' href={`tel:${phone}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fas fa-phone fa-2x text-dark\"></i>\n                    </a>\n                  )\n              }\n          </div>\n          <div className=\"icons my-1\">\n              {\n                  website && (\n                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fas fa-globe fa-2x\"></i>\n                    </a>\n                  )\n              }\n\n              {\n                  social && social.twitter && (<a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-twitter fa-2x\"></i>\n                </a>)\n              }\n\n              {\n                  social && social.facebook && (<a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-facebook fa-2x\"></i>\n                </a>)\n              }\n\n              {\n                  social && social.linkedin && (<a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-linkedin fa-2x\"></i>\n                </a>)\n              }\n\n              {\n                  social && social.youtube && (<a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-youtube fa-2x\"></i>\n                </a>)\n              }\n\n              {\n                  social && social.instagram && (<a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-instagram fa-2x\"></i>\n                </a>)\n              }\n            \n          </div>\n        </div>\n    )\n}\n\nProfileTop.propTypes = {\n    profile: PropTypes.object.isRequired\n}\n\nexport default ProfileTop\n","import PropTypes from 'prop-types'\nimport { Fragment } from 'react'\n\nconst ProfileAbout = ({profile:{\n    bio,\n    skills,\n    user: {name}\n}}) => {\n    return (\n        <div className=\"profile-about bg-light p-2\">\n            {bio && (\n                <Fragment>\n                    <h2 className=\"text-primary\">{name}'s Bio</h2><p>{bio}</p>\n                </Fragment>\n            )}\n        \n        <div className=\"line\"></div>\n        <h2 className=\"text-primary\">Skill Set</h2>\n        <div className=\"skills\">\n          {skills.map((skill, index)=>(\n              <div key={index} className=\"p-1\">\n                  <i className=\"fas fa-check\"></i> {skill}\n              </div>\n          ))}\n        </div>\n      </div>\n    )\n}\n\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired\n}\n\nexport default ProfileAbout\n","import PropTypes from 'prop-types'\nimport { Fragment } from 'react'\nimport Moment from 'react-moment'\n\nconst ProfileExperience = ({experience}) => {\n    return (\n            <Fragment>\n            {experience.length > 0 && (\n                <Fragment>\n                    <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary p-1\">Experience</h2>\n                        {experience.map(exp =>(\n                            <div key={exp._id} className='p-1'>\n                                <h3 className=\"text-dark\">{exp.company}</h3>\n                                <p>\n                                    <Moment format = 'YYYY/MM/DD'>{exp.from}</Moment> - {\n                                        !(exp.to) ? ('Now') : <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\n                                    }\n                                </p>\n                                <p><strong>Title: </strong>{exp.title}</p>\n                                <p><strong>Description: </strong>{exp.description}</p>\n                            </div>\n                        ))}\n                        </div>\n                </Fragment>\n            )}\n            </Fragment>\n    )\n}\n\nProfileExperience.propTypes = {\n    experience: PropTypes.array.isRequired\n}\n\nexport default ProfileExperience\n","import PropTypes from 'prop-types'\nimport { Fragment } from 'react'\nimport Moment from 'react-moment'\n\nconst ProfileProject = ({project}) => {\n    return (\n        <Fragment>\n            {\n                project.length > 0 && (\n                    <Fragment>\n                        {\n                            project.map(pro=>(\n                                <div key={pro._id} className=\"bg-light\">\n                                    <div>\n                                        <img src={pro.url1} alt={pro.title}/>\n                                        {\n                                            pro.url2 === null ? ('') : (<img src={pro.url2} alt={pro.title} />)\n                                        }\n                                    </div>\n                                    <div className=\"text-dark p-1\">\n                                        <ul>\n                                            <li><h2>{pro.title}</h2></li>\n                                            <li><b>Description: </b><em>{pro.description}</em></li><br/>\n                                            <li><b>Date: </b><Moment format='YYYY/MM/DD'>{pro.from}</Moment></li>\n                                            <li><b>Location: </b>{pro.location}</li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </Fragment>\n                )\n            }\n        </Fragment>\n    )\n}\n\nProfileProject.propTypes = {\n    project: PropTypes.array.isRequired\n}\n\nexport default ProfileProject\n","import React, {Fragment, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Spinner from '../layout/Spinner'\nimport {getProfileById} from '../../actions/profile'\nimport {Link} from 'react-router-dom'\nimport ProfileTop from './ProfileTop'\nimport ProfileAbout from './ProfileAbout'\nimport ProfileExperience from './ProfileExperience'\nimport ProfileProject from './ProfileProject'\n\n\nconst Profile = ({getProfileById, profile:{profile, loading}, auth, match}) => {\n    useEffect(()=>{\n        getProfileById(match.params.id);\n    },[getProfileById, match.params.id]);\n    \n    \n    return (\n        <Fragment>\n            {profile === null || loading ? (<Spinner/>) : (<Fragment>\n                    <Link to='/profiles' className=\"btn btn-light\">Back to Profiles</Link>\n                    {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (<Link to='/edit-profile' className='btn btn-dark'>Edit Profile</Link>)}\n                </Fragment>)}\n                <div className=\"profile-grid my-1\">\n                    {profile !== null && (<Fragment>\n                        <ProfileTop profile={profile}/>\n                        <ProfileAbout profile={profile}/>\n                        <ProfileExperience experience={profile.experience}/>\n                        <ProfileProject project={profile.project} />\n                        </Fragment>)}\n                </div>\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getProfileById})(Profile)\n","//racfp\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nconst Alert = ({ alerts }) => alerts != null && alerts.length > 0 && alerts.map(alert => (\n    //jsx - Javascript XML used to write HTML in React\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n        { alert.msg }\n    </div>\n));\n\nAlert.propTypes = {\n    //ptar\n    alerts: PropTypes.array.isRequired\n}\n//mapping a redux state to a prop\n//here, the array of alerts\nconst mapStateToProps = state => ({\n    //refer root reducers i.e. index.js\n    alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action){\n    const { type, payload } = action;\n    switch(type){\n        //return a state (note: state is immutable therfore we copy existing state and append to it) it is the array we se in redux dev tools\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert=>alert.id !== payload);\n        default:\n            return state;\n    }\n}","import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED } from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action){\n    const {type, payload} = action;\n    \n    switch(type){\n        case USER_LOADED:\n            return{\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {...state, ...payload, isAuthenticated: true, loading: false};\n        \n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case ACCOUNT_DELETED:\n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n\n        default:\n            return state;\n    }\n}","import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES } from \"../actions/types\";\n\nconst initialState ={\n    profile: null,\n    profiles: [],\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action){\n    const { type, payload } = action;\n\n    switch(type){\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        case GET_PROFILES:\n            return{\n                ...state,\n                profiles: payload,\n                loading: false\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\n\nexport default combineReducers({\n    alert,\n    auth,\n    profile\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [ thunk ];\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PrivateRoute from './components/routing/PrivateRoute'\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile'\nimport AddExperience from './components/profile-forms/AddExperience'\nimport AddProject from './components/profile-forms/AddProject'\nimport Profiles from './components/profiles/Profiles'\nimport Profile from './components/profile/Profile'\n\nimport Alert from './components/layout/Alert';\n//Provider combines redux with react\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './App.css';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\n//everytime the app loads\nif(localStorage.token)\n        setAuthToken(localStorage.token)\n\nconst App = () => {\n  // similar to componentDidMount it will only update when [properties] update\n  useEffect(()=>{\n    store.dispatch(loadUser());\n  },[])\n\n  return(\n    <Provider store={ store }>\n      <Router>\n      <Fragment>\n        <Navbar />\n        <Route exact path='/' component={ Landing } />\n        <section className=\"container\">\n          <Alert/>\n          <Switch>\n            <Route exact path = '/register' component = { Register } />\n            <Route exact path = '/login' component = { Login } />\n            <Route exact path='/profiles' component={ Profiles } />\n            <Route exact path='/profile/:id' component={ Profile } />\n            <PrivateRoute exact path = '/dashboard' component = { Dashboard } />\n            <PrivateRoute exact path = '/create-profile' component = { CreateProfile } />\n            <PrivateRoute exact path = '/edit-profile' component = { EditProfile } />\n            <PrivateRoute exact path = '/add-experience' component = { AddExperience } />\n            <PrivateRoute exact path = '/add-project' component = { AddProject } />\n          </Switch>\n        </section>\n      </Fragment>\n    </Router>\n    </Provider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}